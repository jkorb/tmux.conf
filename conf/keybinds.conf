# vim: filetype=tmux

# Unbind all the keys

unbind -a

# 

bind-key   -T prefix       0       select-window -t :=0
bind-key   -T prefix       1       select-window -t :=1
bind-key   -T prefix       2       select-window -t :=2
bind-key   -T prefix       3       select-window -t :=3
bind-key   -T prefix       4       select-window -t :=4
bind-key   -T prefix       5       select-window -t :=5
bind-key   -T prefix       6       select-window -t :=6
bind-key   -T prefix       7       select-window -t :=7
bind-key   -T prefix       8       select-window -t :=8
bind-key   -T prefix       9       select-window -t :=9
bind-key   -T prefix       :       command-prompt

# Prefix

bind-key   -T prefix       C-a    send-prefix

# Reload

bind-key   -T prefix       r      source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display-message "  Config reloaded..".

# Copy/Paste
#----------------------------------------

bind-key   -T prefix       Enter  copy-mode # enter copy mode

bind-key   -T copy-mode-vi v       send-keys -X begin-selection
bind-key   -T copy-mode-vi C-v     send-keys -X rectangle-toggle
bind-key   -T copy-mode-vi Escape  send-keys -X cancel
bind-key   -T copy-mode-vi C-g     send-keys -X cancel
bind-key   -T copy-mode-vi H       send-keys -X start-of-line
bind-key   -T copy-mode-vi L       send-keys -X end-of-line


# Navigation
# ----------------------------------------

bind-key    -T prefix      v       split-window -h -c "#{pane_current_path}"
bind-key    -T prefix      s       split-window -v -c "#{pane_current_path}"

bind c run-shell '$XDG_CONFIG_HOME/tmux/scripts/new-window.zsh'

bind - select-layout tiled
bind = select-layout even-vertical
bind + select-layout even-horizontal

bind C-s swap-pane 
bind C-b break-pane -d
bind C-j join-pane

bind-key -n C-Left  resize-pane -L
bind-key -n C-Down  resize-pane -D
bind-key -n C-Up    resize-pane -U
bind-key -n C-Right resize-pane -R

bind m select-pane -m
bind M select-pane -M

bind z resize-pane -Z

bind "'" switch-client -t '{marked}'

# bind / split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
bind   j choose-tree -Z
bind C-j choose-tree -swZ

bind C-w last-pane

bind C-] next-window
bind C-[ previous-window

bind b set status 

bind T next-window
bind t previous-window

bind-key C-x run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

bind-key -n C-Space run-shell -b "$HOME/.config/tmux/scripts/tmux-remote-attach.zsh > /dev/null"

# Vim

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Clear 

bind C-l send-keys 'C-l'

# Quick panes

# bind-key C-n run-shell "$XDG_CONFIG_HOME/tmux/scripts/open-scratch.zsh"
# bind-key C-m split-window -v "neomutt"
# bind-key C-g split-window -v "gotop"
# bind-key C-c split-window -v "khal interactive"

